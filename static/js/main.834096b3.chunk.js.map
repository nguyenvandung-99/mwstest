{"version":3,"sources":["components/Footer.tsx","api/api.ts","components/Teams.tsx","components/Pagination.tsx","components/SearchBar.tsx","screens/HomeScreen.tsx","components/UpcomingGames.tsx","components/PreviousGames.tsx","screens/TeamDetail.tsx","App.tsx","index.tsx"],"names":["Footer","props","axios","require","default","fetchTeams","a","get","then","res","data","filter","team","mascot","fetchGames","teamName","params","year","Teams","teams","length","className","map","to","school","src","logos","alt","abbreviation","id","Pagination","useState","page","setPage","buttonPage","pageNavi","disabled","onClick","onSubmit","e","preventDefault","name","type","value","min","max","pagemax","title","onChange","parseInt","target","SearchBar","placeholder","searchTeams","HomeScreen","bind","state","sessionStorage","JSON","parse","match","entries","localStorage","searchWord","window","history","pushState","process","stringify","scrollTo","top","behavior","this","setState","setItem","word","toLowerCase","includes","refreshTeams","slice","Math","ceil","React","Component","UpcomingGames","upcoming","game","Date","start_date","toString","home_team","away_team","score","PreviousGames","WinOrLose","home_points","away_points","previous","style","backgroundColor","fontWeight","home_line_scores","away_line_scores","TeamDetail","games","forEach","unshift","push","refreshGames","App","basename","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.834096b3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Footer(props: any) {\r\n  return (\r\n    <>\r\n      A fancy footer\r\n    </>\r\n  );\r\n}\r\n","import { Team, Game } from \"../types\";\r\nconst axios = require(\"axios\").default;\r\n\r\nexport const fetchTeams = async (): Promise<Team[]> => {\r\n  return await axios\r\n    .get(\"https://api.collegefootballdata.com/teams\")\r\n    .then((res: any) => res.data.filter((team: Team) => team.mascot !== null)); // take only teams that actually compete\r\n};\r\n\r\nexport const fetchGames = async (teamName: string): Promise<Game[]> => {\r\n  return await axios\r\n    .get(\"https://api.collegefootballdata.com/games\", {\r\n      params: {\r\n        year: 2020, // I don't see API for getting games from all years so 2020 is default\r\n        team: teamName,\r\n      }\r\n    })\r\n    .then((res: any) => res.data);\r\n};\r\n","import React from \"react\";\r\nimport { Team } from \"../types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Teams(props: any) {\r\n  // pass array of teams down to Teams, so the number of display per each time is changeable (5,10,20,etc)\r\n  return (\r\n    <div>\r\n      {props.teams.length === 0 ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <ul className=\"teams\">\r\n          {props.teams.map((team: Team) => (\r\n            <li key={team.id}>\r\n              <Link to={\"/teamdetail/\" + team.school}>\r\n                <img\r\n                  src={team.logos ? team.logos[0] : \"\"}\r\n                  alt={team.abbreviation}\r\n                />\r\n                <p>{team.school}</p>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Pagination(props: any) {\r\n  \r\n  const [page, setPage] = useState(props.page);\r\n\r\n  const enterPage = (e: React.SyntheticEvent) => { // enter the page\r\n    e.preventDefault();\r\n    props.pageNavi(page);\r\n  }\r\n\r\n  const buttonPage = (page: number) => { // click to go to page\r\n    setPage(page);\r\n    props.pageNavi(page);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"pagination\">\r\n      <button\r\n        disabled={props.page === 1}\r\n        onClick={() => buttonPage(props.page - 1)}\r\n      >\r\n        &lt;\r\n      </button>\r\n      <button\r\n        disabled={props.page === 1}\r\n        onClick={() => buttonPage(1)}>\r\n        Page 1\r\n      </button>\r\n      <form onSubmit={enterPage}>\r\n        <input\r\n        name=\"page\"\r\n        type=\"number\"\r\n        value={page}\r\n        min={1}\r\n        max={props.pagemax}\r\n        title=\"page\"\r\n        onChange={(e) => setPage(parseInt(e.target.value))} />\r\n      </form>\r\n      <button\r\n        disabled={props.page === props.pagemax}\r\n        onClick={() => buttonPage(props.pagemax)}\r\n      >\r\n        Page {props.pagemax}\r\n      </button>\r\n      <button\r\n        disabled={props.page === props.pagemax}\r\n        onClick={() => buttonPage(props.page + 1)}\r\n      >\r\n        &gt;\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function SearchBar(props: any) {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Search...\"\r\n      title=\"search\"\r\n      onChange={(e) => props.searchTeams(e.target.value)}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { fetchTeams } from \"../api/api\";\r\nimport { Team } from \"../types\";\r\nimport Teams from \"../components/Teams\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\ninterface MyState {\r\n  teams: Team[];\r\n  page: number;\r\n  entries: number;\r\n  searchWord: string;\r\n}\r\n\r\nexport default class HomeScreen extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.pageNavi = this.pageNavi.bind(this);\r\n    this.searchTeams = this.searchTeams.bind(this);\r\n    this.state = {\r\n      teams: sessionStorage.teams ? JSON.parse(sessionStorage.teams) : [], // can also use redux instead of sessionstorage but I feel like the app is not quite big for redux\r\n      page: props.match.params.page ? parseInt(props.match.params.page) : 1, // let user go to team from address bar\r\n      entries: localStorage.entries ? JSON.parse(localStorage.entries) : 10, // user's preference, saved on local for next time. The feature hasn't been coded in yet\r\n      searchWord: \"\",\r\n    };\r\n  }\r\n\r\n  pageNavi(page: number): void {\r\n    // navigate page\r\n    window.history.pushState({}, \"\", process.env.PUBLIC_URL + \"/page/\" + JSON.stringify(page));\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" }); // this line not tested yet\r\n    this.setState({\r\n      page,\r\n    });\r\n  }\r\n\r\n  refreshTeams(): void {\r\n    // refresh when user go to website first time and also can be made into an option\r\n    fetchTeams().then((teams) => {\r\n      sessionStorage.setItem(\"teams\", JSON.stringify(teams));\r\n      this.setState({\r\n        teams,\r\n      });\r\n    });\r\n  }\r\n\r\n  searchTeams(word: string): void {\r\n    // search for teams\r\n    this.pageNavi(1);\r\n    if (word === \"\") {\r\n      this.setState({\r\n        teams: JSON.parse(sessionStorage.teams),\r\n      });\r\n    } else {\r\n      this.setState({\r\n        teams: JSON.parse(sessionStorage.teams).filter((team: Team) =>\r\n          team.school.toLowerCase().includes(word.toLowerCase())\r\n        ),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshTeams();\r\n  }\r\n\r\n  render() {\r\n    const { page, entries, teams, searchWord } = this.state; // make code easier to understand\r\n\r\n    return (\r\n      <div className=\"homescreen\">\r\n        <SearchBar searchTeams={this.searchTeams} searchWord={searchWord} />\r\n        <Teams teams={teams.slice((page - 1) * entries, page * entries)} />\r\n        <Pagination\r\n          page={page}\r\n          pagemax={Math.ceil(teams.length / entries)}\r\n          pageNavi={this.pageNavi}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Game } from \"../types\";\r\n\r\nexport default function UpcomingGames(props: any) {\r\n  return (\r\n    <div>\r\n      {props.upcoming.length === 0 ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <div>\r\n          <h3>Upcoming Games</h3>\r\n          <ul className=\"upcoming games\">\r\n            {props.upcoming.map((game: Game) => (\r\n              <li key={game.id}>\r\n                <div className=\"game-time\">\r\n                  <table>\r\n                    <tr>{new Date(game.start_date).toString().slice(4, 10)}</tr>\r\n                    <tr>{game.start_date.slice(11, 16)}</tr>\r\n                  </table>\r\n                </div>\r\n                <div className=\"game-team\">\r\n                  <table>\r\n                    <tr>{game.home_team}</tr>\r\n                    <tr>{game.away_team}</tr>\r\n                  </table>\r\n                </div>\r\n                <div className=\"game-score\">\r\n                  <table>\r\n                    <tr>\r\n                      <th>-</th>\r\n                      {[\"-\", \"-\", \"-\", \"-\"].map((score: string) => (\r\n                        <td>{score}</td>\r\n                      ))}\r\n                    </tr>\r\n                    <tr>\r\n                      <th>-</th>\r\n                      {[\"-\", \"-\", \"-\", \"-\"].map((score: string) => (\r\n                        <td>{score}</td>\r\n                      ))}\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Game } from \"../types\";\r\n\r\nexport default function PreviousGames(props: any) {\r\n  const WinOrLose = (game: Game) =>\r\n    game.home_points > game.away_points ? true : false;\r\n\r\n  return (\r\n    <div>\r\n      {props.previous.length > 0 && (\r\n        <>\r\n          <h3>Previous Games </h3>\r\n          <ul className=\"previous games\">\r\n            {props.previous.map((game: Game) => (\r\n              <li\r\n                key={game.id}\r\n                style={{\r\n                  backgroundColor:\r\n                    (game.home_team === props.team) === WinOrLose(game) // true true and false false mean win, T F and F T mean lose\r\n                      ? \"#afa\"\r\n                      : \"#faa\",\r\n                }}\r\n              >\r\n                <div className=\"game-time\">\r\n                  <table>\r\n                    <tr>{new Date(game.start_date).toString().slice(4, 10)}</tr>\r\n                    <tr>{game.start_date.slice(11, 16)}</tr>\r\n                  </table>\r\n                </div>\r\n                <div className=\"game-team\">\r\n                  <table>\r\n                    <tr style={WinOrLose(game) ? { fontWeight: \"bold\" } : {}}>\r\n                      {game.home_team}\r\n                    </tr>\r\n                    <tr style={!WinOrLose(game) ? { fontWeight: \"bold\" } : {}}>\r\n                      {game.away_team}\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n                <div className=\"game-score\">\r\n                  <table>\r\n                    <tr>\r\n                      <th>{game.home_points}</th>\r\n                      {game.home_line_scores.map((score: number) => (\r\n                        <td>{score}</td>\r\n                      ))}\r\n                    </tr>\r\n                    <tr>\r\n                      <th>{game.away_points}</th>\r\n                      {game.away_line_scores.map((score: number) => (\r\n                        <td>{score}</td>\r\n                      ))}\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { fetchGames } from \"../api/api\";\r\nimport { Game } from \"../types\";\r\nimport UpcomingGames from \"../components/UpcomingGames\";\r\nimport PreviousGames from \"../components/PreviousGames\";\r\n\r\ninterface MyState {\r\n  team: string;\r\n  previous: Game[];\r\n  upcoming: Game[];\r\n}\r\n\r\nexport default class TeamDetail extends React.Component<{}, MyState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      team: props.match.params.team ? props.match.params.team : \"\",\r\n      previous: [],\r\n      upcoming: [],\r\n    };\r\n  }\r\n\r\n  refreshGames(): void {\r\n    // refresh when user go to website first time and also can be made into an option\r\n    let previous: Game[] = [];\r\n    let upcoming: Game[] = [];\r\n    fetchGames(this.state.team)\r\n      .then((games) =>\r\n        games.forEach((game) => {\r\n          game.home_points ? previous.unshift(game) : upcoming.push(game); // split into past and future matches\r\n        })\r\n      )\r\n      .then(() =>\r\n        this.setState({\r\n          previous,\r\n          upcoming,\r\n        })\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshGames();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"team-detail\">\r\n        <h2>{this.state.team}</h2>\r\n        <UpcomingGames upcoming={this.state.upcoming} />\r\n        <PreviousGames previous={this.state.previous} team={this.state.team} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport TeamDetail from \"./screens/TeamDetail\";\n\nfunction App() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <header>\n          <Link to=\"/\">Home</Link>\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/\" component={HomeScreen} exact />\n            <Route path=\"/page/:page\" component={HomeScreen} exact />\n            <Route path=\"/teamdetail/:team\" component={TeamDetail} />\n          </Switch>\n        </main> \n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}